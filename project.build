<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Compile">

  <!-- ASCII constants -->
  <PropertyGroup>
    <NEW_LINE>%0D%0A</NEW_LINE>
    <TAB>%09</TAB>
    <DOUBLE_QUOTES>%22</DOUBLE_QUOTES>
    <SPACE>%20</SPACE>
  </PropertyGroup>

  <PropertyGroup>
    <MSBuildCommunityTasksPath>$(MSBuildProjectDirectory)\.build</MSBuildCommunityTasksPath>
    <!--<WixToolPath>$(MSBuildProjectDirectory)\wix\3.7\</WixToolPath>
    <WixTargetsPath>$(MSBuildProjectDirectory)\wix\3.7\Wix.targets</WixTargetsPath>
    <WixTasksPath>$(WixToolPath)wixtasks.dll</WixTasksPath>-->
  </PropertyGroup>

  <PropertyGroup>
    <OutputName>MCP</OutputName>
    <SolutionName>Stoupa.MachineCareToEdit.sln</SolutionName>
    <ArtifactsFolder>$(MsBuildProjectDirectory)\..\..\deployments</ArtifactsFolder>
  </PropertyGroup>

  <Import Project="$(MSBuildCommunityTasksPath)\MSBuild.Community.Tasks.targets" />
  <!--<Import Project="$(WixTargetsPath)" />-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <Import Project="C:\Program Files (x86)\MSBuild\CodeSmith\CodeSmith.targets" />

  <PropertyGroup>
    <Configuration>Release</Configuration>
    <Configuration Condition="'$(Cfg)' != ''">$(Cfg)</Configuration>
    <BuildTargets>Rebuild</BuildTargets>
    <BuildNumber>$(build_number)</BuildNumber>
    <BuildNumber Condition="'$(BuildNumber)' == ''">$(Version)</BuildNumber>
    <OutputPath>$(MsBuildProjectDirectory)\BuildOutput</OutputPath>
    <OutputName>$(OutputName) $(BuildNumber)</OutputName>
    <SolutionDir>$(MSBuildProjectDirectory)</SolutionDir>
    <SolutionFile>$(SolutionDir)\$(SolutionName)</SolutionFile>
    <NUnitPath Condition="'$(teamcity_dotnet_nunitlauncher_msbuild_task)' == ''">$(MSBuildProjectDirectory)\packages\NUnit.Runners.2.6.3\tools</NUnitPath>
    <NunitVersionParameter Condition="'$(teamcity_dotnet_nunitlauncher_msbuild_task)' != ''">NUnitVersion="NUnit-2.6.2" RuntimeVersion="v4.0"</NunitVersionParameter>
    <teamcity_dotnet_nunitlauncher_msbuild_task Condition="'$(teamcity_dotnet_nunitlauncher_msbuild_task)' == ''">$(MSBuildCommunityTasksPath)\MSBuild.Community.Tasks.dll</teamcity_dotnet_nunitlauncher_msbuild_task>
    <UpdateProductGuid>false</UpdateProductGuid>
    <WebsiteBinFolder>$(MSBuildProjectDirectory)\Stoupa.MachineCare.Website\Bin</WebsiteBinFolder>
    <TestResultFileAppendix>.testresult.xml</TestResultFileAppendix>
    <RootConfigPath>$(MSBuildProjectDirectory)</RootConfigPath>
    <WebProjConfigPath>$(MSBuildProjectDirectory)\Stoupa.MachineCare.Website\Config</WebProjConfigPath>
    <DataServicesConfigPath>$(MSBuildProjectDirectory)\Stoupa.MachineCare.DataServices\Config</DataServicesConfigPath>
    <MailReportConfigPath>$(MSBuildProjectDirectory)\Stoupa.MachineCare.MailReport\Config</MailReportConfigPath>
  </PropertyGroup>

  <UsingTask TaskName="NUnit" AssemblyFile="$(teamcity_dotnet_nunitlauncher_msbuild_task)" />
  <UsingTask TaskName="TransformXml" AssemblyFile="$(MSBuildExtensionsPath)\Microsoft\VisualStudio\v10.0\Web\Microsoft.Web.Publishing.Tasks.dll"/>
  
  <ItemGroup>
    <!--<SetupFiles Include="$(MSBuildProjectDirectory)\itree.gef.ddb.Setup\DrogenDatenbank.wxs" />-->
  </ItemGroup>

  <PropertyGroup>
    <GuidGenFunction>
      <![CDATA[ 
      public static string ScriptMain() { 
          return System.Guid.NewGuid().ToString().ToUpper(); 
      } 
      ]]>
    </GuidGenFunction>
  </PropertyGroup>

  <Target Name="CopyConfig" Condition="'$(build_number)' == ''">
    <!-- data services --> 
    <Copy
      SourceFiles="$(MSBuildProjectDirectory)\connstrings.config;"
      DestinationFolder="$(DataServicesConfigPath)"
    />  
    <!-- mailreport -->
    <Copy
      SourceFiles="$(MSBuildProjectDirectory)\connstrings.config; $(MSBuildProjectDirectory)\entlib.config; $(MSBuildProjectDirectory)\smtpSettings.config"
      DestinationFolder="$(MailReportConfigPath)"
    />
    <!-- website -->
    <Copy
    SourceFiles="$(MSBuildProjectDirectory)\appsettings.config; $(MSBuildProjectDirectory)\connstrings.config; $(MSBuildProjectDirectory)\entlib.config; $(MSBuildProjectDirectory)\smtpSettings.config"
    DestinationFolder="$(WebProjConfigPath)"
    />
  </Target>
  
  <Target Name="Publish" DependsOnTargets="Compile;AddModules;RunTests">
    <PropertyGroup>
      <OutDir></OutDir>
    </PropertyGroup>
    <RemoveDir Directories="$(OutDir)" />
    <!-- <CallTarget Targets="DeployLocally" /> -->
    <CallTarget Targets="CreatePackageTest" />
  </Target>
  
  <Target Name="DeployLocally">
    <!-- appsettings.config -->
    <TransformXml Source="$(RootConfigPath)\appsettings.config"
              Transform="$(RootConfigPath)\appsettings.DeployLocal.config"
              Destination="$(WebProjConfigPath)\appsettings.config"/>
    <!-- connstrings.config -->
    <TransformXml Source="$(RootConfigPath)\connstrings.config"
              Transform="$(RootConfigPath)\connstrings.DeployLocal.config"
              Destination="$(DataServicesConfigPath)\connstrings.config"/>
    <TransformXml Source="$(RootConfigPath)\connstrings.config"
              Transform="$(RootConfigPath)\connstrings.DeployLocal.config"
              Destination="$(MailReportConfigPath)\connstrings.config"/>
    <TransformXml Source="$(RootConfigPath)\connstrings.config"
              Transform="$(RootConfigPath)\connstrings.DeployLocal.config"
              Destination="$(WebProjConfigPath)\connstrings.config"/>
    <!-- entlib.config -->
    <TransformXml Source="$(RootConfigPath)\entlib.config"
              Transform="$(RootConfigPath)\entlib.DeployLocal.config"
              Destination="$(MailReportConfigPath)\entlib.config"/>
    <TransformXml Source="$(RootConfigPath)\entlib.config"
              Transform="$(RootConfigPath)\entlib.DeployLocal.config"
              Destination="$(WebProjConfigPath)\entlib.config"/>
    <!-- smtpSettings.config -->
    <TransformXml Source="$(RootConfigPath)\smtpSettings.config"
              Transform="$(RootConfigPath)\smtpSettings.DeployLocal.config"
              Destination="$(MailReportConfigPath)\smtpSettings.config"/>
    <TransformXml Source="$(RootConfigPath)\smtpSettings.config"
              Transform="$(RootConfigPath)\smtpSettings.DeployLocal.config"
              Destination="$(WebProjConfigPath)\smtpSettings.config"/>
    <MSBuild Projects="Stoupa.MachineCare.Website\Stoupa.MachineCare.Website.csproj" Properties="Configuration=Release;DeployOnBuild=true;PublishProfile=DeployLocal;VisualStudioVersion=11.0;Password=publish" />
  </Target>
    
  <Target Name="CreatePackageTest">
    <Message Text="Blaser Test Package; Output Directory: $(ArtifactsFolder)" Importance="high" />
     <!-- appsettings.config --> 
    <TransformXml Source="$(RootConfigPath)\appsettings.config"
              Transform="$(RootConfigPath)\appsettings.BlaserTestPackage.config"
              Destination="$(WebProjConfigPath)\appsettings.config"/>
     <!-- connstrings.config --> 
    <TransformXml Source="$(RootConfigPath)\connstrings.config"
              Transform="$(RootConfigPath)\connstrings.BlaserTestPackage.config"
              Destination="$(DataServicesConfigPath)\connstrings.config"/>
    <TransformXml Source="$(RootConfigPath)\connstrings.config"
              Transform="$(RootConfigPath)\connstrings.BlaserTestPackage.config"
              Destination="$(MailReportConfigPath)\connstrings.config"/>
    <TransformXml Source="$(RootConfigPath)\connstrings.config"
              Transform="$(RootConfigPath)\connstrings.BlaserTestPackage.config"
              Destination="$(WebProjConfigPath)\connstrings.config"/>
     <!-- entlib.config --> 
    <TransformXml Source="$(RootConfigPath)\entlib.config"
              Transform="$(RootConfigPath)\entlib.BlaserTestPackage.config"
              Destination="$(MailReportConfigPath)\entlib.config"/>
    <TransformXml Source="$(RootConfigPath)\entlib.config"
              Transform="$(RootConfigPath)\entlib.BlaserTestPackage.config"
              Destination="$(WebProjConfigPath)\entlib.config"/>
     <!-- smtpSettings.config --> 
    <TransformXml Source="$(RootConfigPath)\smtpSettings.config"
              Transform="$(RootConfigPath)\smtpSettings.BlaserTestPackage.config"
              Destination="$(MailReportConfigPath)\smtpSettings.config"/>
    <TransformXml Source="$(RootConfigPath)\smtpSettings.config"
              Transform="$(RootConfigPath)\smtpSettings.BlaserTestPackage.config"
              Destination="$(WebProjConfigPath)\smtpSettings.config"/>
    <MSBuild Projects="Stoupa.MachineCare.Website\Stoupa.MachineCare.Website.csproj" Properties="PackageLocation=$(ArtifactsFolder)\Stoupa.MachineCare.BlaserTestPackage_$(build_number).zip;Configuration=Release;DeployOnBuild=true;PublishProfile=BlaserTestPackage;WebPublishMethod=Package" />
  </Target>
      
  <!-- Getting all projects from the specified solution to build -->
  <Target Name="GetProjectsFromSolution">

    <Message Text="Build Configuration: $(Configuration)" Importance="high" />
    <Message Text="Getting solution projects for $(DOUBLE_QUOTES)$(SolutionFile)$(DOUBLE_QUOTES)" Importance="high" />

    <!-- Get all the projects associated with the solution -->
    <GetSolutionProjects Solution="$(SolutionFile)">
      <Output TaskParameter="Output" ItemName="SolutionProjects" />
    </GetSolutionProjects>

    <!-- Filter out solution folders and non .csproj items -->
    <RegexMatch Input="@(SolutionProjects)" Expression=".[\.]csproj$">
      <Output TaskParameter="Output" ItemName="CSProjects"/>
    </RegexMatch>

    <!-- Resolve the test projects -->
    <RegexMatch Input="@(CSProjects)" Expression=".*(Test|Tests).*.csproj">
      <Output TaskParameter="Output" ItemName="TestProjects"/>
    </RegexMatch>

    <!-- Resolve the modules projects -->
    <RegexMatch Input="@(CSProjects)" Expression=".Modules.*.csproj">
      <Output TaskParameter="Output" ItemName="ModuleProjects" />
    </RegexMatch>
    
    <!-- Resolve the code projects -->
    <CreateItem Include="@(CSProjects)"
                Exclude="@(TestProjects);@(ModuleProjects)">
      <Output TaskParameter="Include" ItemName="CodeProjects"/>
    </CreateItem>

    <!-- Get all WiX projects from the solution -->
    <RegexMatch Input="@(SolutionProjects)" Expression=".[\.]wixproj$">
      <Output TaskParameter="Output" ItemName="WixProjects" />
    </RegexMatch>
    
    <Message Text="$(NEW_LINE)Code Projects:$(NEW_LINE)$(TAB)@(CodeProjects->'%(RelativeDir)%(FileName)%(Extension)', '$(NEW_LINE)$(TAB)')" Importance="high"/>
    <Message Text="$(NEW_LINE)Module Projects:$(NEW_LINE)$(TAB)@(ModuleProjects->'%(RelativeDir)%(FileName)%(Extension)', '$(NEW_LINE)$(TAB)')" Importance="high"/>
    <Message Condition="'@(TestProjects)' != ''" Text="$(NEW_LINE)Test Projects:$(NEW_LINE)$(TAB)@(TestProjects->'%(RelativeDir)%(FileName)%(Extension)', '$(NEW_LINE)$(TAB)')" Importance="high"/>
    <Message Condition="'@(TestProjects)' == ''" Text="$(NEW_LINE)Test Projects:$(NEW_LINE)$(TAB)No Test Projects found" Importance="high"/>
    <Message Condition="'@(WixProjects)' != ''" Text="$(NEW_LINE)Wix Projects:$(NEW_LINE)$(TAB)@(WixProjects->'%(RelativeDir)%(FileName)%(Extension)', '$(NEW_LINE)$(TAB)')" Importance="high"/>
    <Message Condition="'@(WixProjects)' == ''" Text="$(NEW_LINE)Wix Projects:$(NEW_LINE)$(TAB)No Setup Projects found" Importance="high" />

  </Target>

  <!-- Clean the solution output -->
  <Target Name="CleanSolution" DependsOnTargets="GetProjectsFromSolution">

    <!-- Create item collection of assemblies and other artifacts produced by the build -->
    <ItemGroup>
      <SolutionOutput Condition="'@(CodeProjects)' != ''" Include="@(CodeProjects->'%(RelativeDir)')"></SolutionOutput>
      <SolutionOutput Condition="'@(WixProjects)' != ''" Include="@(WixProjects->'%(RelativeDir)')"></SolutionOutput>
      <SolutionOutput Condition="'@(TestProjects)' != ''" Include="@(TestProjects->'%(RelativeDir)')"></SolutionOutput>
      <ProjectPaths Include="@(SolutionOutput->'%(FullPath)bin\')" />
      <ProjectPaths Include="@(SolutionOutput->'%(FullPath)bin\Debug')" />
      <ProjectPaths Include="@(SolutionOutput->'%(FullPath)bin\Release')" />
      <ProjectPaths Include="@(SolutionOutput->'%(FullPath)bin\$(Configuration)')" />
      <ProjectPaths Include="@(SolutionOutput->'%(FullPath)obj\')" />
      <ProjectPaths Include="@(SolutionOutput->'%(FullPath)obj\Debug')" />
      <ProjectPaths Include="@(SolutionOutput->'%(FullPath)obj\Release')" />
      <ProjectPaths Include="@(SolutionOutput->'%(FullPath)obj\$(Configuration)')" />
    </ItemGroup>

    <CreateItem Include="@(ProjectPaths->'%(FullPath)\*.*')">
      <Output TaskParameter="Include" ItemName="FileNamesToDelete" />
    </CreateItem>

    <!-- exclude the vshost.exe file because it cannot be deleted when visual studio is open -->
    <RegexMatch Input="@(FileNamesToDelete)" Expression="(?&lt;!\.vshost\.exe)$">
      <Output TaskParameter="Output" ItemName="ItemsToDelete" />
    </RegexMatch>

    <Message Text="Deleting previous build output files..." Importance="high" />
    <Message Text="@(ItemsToDelete->'%(FullPath)', '$(NEW_LINE)')" />

    <!-- remove OutputPath -->
    <RemoveDir Directories="$(OutputPath)" />
               
    <!-- Delete all the solution created artifacts -->
    <Delete Files="@(ItemsToDelete)"/>

  </Target>

  <!-- Create AssemblyInfo versions -->
  <Target Name="CreateAssemblyInfoVersions" Condition="'$(BuildNumber)' != ''" DependsOnTargets="GetProjectsFromSolution">

    <Message Text="create versions: $(BuildNumber)" Importance="high" />

    <ItemGroup>
      <AssemblyInfoFiles Include="$(MSBuildProjectDirectory)\AssemblyInfo.cs" />
      <AssemblyInfoFiles Include="@(CodeProjects->'%(RelativeDir)Properties\AssemblyInfo.cs')" />
      <AssemblyInfoFiles Include="@(CodeProjects->'%(RelativeDir)AssemblyInfo.cs')" />
      <AssemblyInfoFiles Include="@(ModuleProjects->'%(RelativeDir)Properties\AssemblyInfo.cs')" />
      <AssemblyInfoFiles Include="@(ModuleProjects->'%(RelativeDir)AssemblyInfo.cs')" />
    </ItemGroup>

    <Message Text="AssemblyInfoFiles:$(NEW_LINE)$(TAB)@(AssemblyInfoFiles, '$(NEW_LINE)$(TAB)')" Importance="high" />

    <!--AssemblyVersion -->
    <FileUpdate
      Files="@(AssemblyInfoFiles)"
      Regex="AssemblyVersion\(&quot;.*&quot;\)\]"
      ReplacementText="AssemblyVersion(&quot;$(BuildNumber)&quot;)]"
      Condition="Exists('%(RootDir)%(Directory)%(Filename)%(Extension)')"
    />
    <!-- AssemblyFileVersion -->
    <FileUpdate
      Files="@(AssemblyInfoFiles)"
      Regex="AssemblyFileVersion\(&quot;.*&quot;\)\]"
      ReplacementText="AssemblyFileVersion(&quot;$(BuildNumber)&quot;)]"
      Condition="Exists('%(RootDir)%(Directory)%(Filename)%(Extension)')"
    />
  </Target>

  <!-- Compile -->
  <Target Name="Compile" DependsOnTargets="CopyConfig;GetProjectsFromSolution; CreateAssemblyInfoVersions; CleanSolution">

    <Message Text="Version: $(BuildNumber)" Importance="high" />
    <Message Text="OutputPath: $(NEW_LINE)$(TAB)$(OutputPath" Importance="high" />

    <MsBuild
      Projects="@(CodeProjects)"
      Targets="$(BuildTargets)"
      Properties="Configuration=$(Configuration);OutputPath=$(OutputPath);SolutionDir=$(SolutionDir)">
      <Output TaskParameter="TargetOutputs" ItemName="AssembliesBuilt" />
    </MsBuild>

    <Message Text="Assemblies Built:$(NEW_LINE)$(TAB)@(AssembliesBuilt->'%(RelativeDir)%(FileName)%(Extension)', '$(NEW_LINE)$(TAB)')" Importance="high"/>

  </Target>
  
  <Target Name="AddModules" DependsOnTargets="Compile">
    
    <Message Text="Building Modules: $(BuildNumber)" Importance="high" />
    <Message Text="OutputPath: $(NEW_LINE)$(TAB)$(OutputPath)" Importance="high" />
  
    <MsBuild
      Projects="@(ModuleProjects)"
      Targets="$(BuildTargets)"
      Properties="Configuration=$(Configuration);OutputPath=$(OutputPath);SolutionDir=$(SolutionDir)">
      <Output TaskParameter="TargetOutputs" ItemName="AssembliesBuilt" />
    </MsBuild>
  
    <Message Text="Modules Built:$(NEW_LINE)$(TAB)$(OutputPath)\@(ModuleProjects->'%(FileName).dll', '$(NEW_LINE)$(TAB)')" Importance="high"/>
    
    <!-- copy project module -->
    <Copy 
      SourceFiles="$(OutputPath)\MachineCare.Modules.Product.Bls.Symbol.dll" 
      DestinationFolder="$(MsBuildProjectDirectory)\Stoupa.MachineCare.Website\Modules\Product\bin" 
    />
    <CreateItem Include="$(MsBuildProjectDirectory)\..\Modules 104\ModPctBlsSymbol\MachineCare.Modules.Product.Bls.Symbol\Modules\Product\MachineCare.Modules.Product.Bls.Symbol\*.gif">
      <Output TaskParameter="Include" ItemName="Gifs" />
    </CreateItem>
    <Copy 
      SourceFiles="@(Gifs)"
      DestinationFolder="$(MsBuildProjectDirectory)\Stoupa.MachineCare.Website\Modules\Product\MachineCare.Modules.Product.Bls.Symbol"
    />
  
    <!-- copy type module -->
    <Copy 
      SourceFiles="$(OutputPath)\MachineCare.Modules.MCType.Bls.Color.dll" 
      DestinationFolder="$(MsBuildProjectDirectory)\Stoupa.MachineCare.Website\Modules\MCType\bin" 
    />
  </Target>

  <!-- Build NUnit Tests -->
  <Target Name="BuildTests" DependsOnTargets="Compile">

    <Message Text="build the test projects..." Importance="high" />

    <MakeDir Directories="$(NUnitHome)/bin/addins" />
    <Copy SourceFiles="@(NUnitAddinFiles)" DestinationFolder="$(NUnitHome)/bin/addins" />

    <Message Text="NUNIt Path: $(NunitPath)" Importance="high" />
    <Message Text="TestProjects:$(NEW_LINE)$(TAB)@(TestProjects->'%(RelativeDir)%(FileName)%(Extension)', '$(NEW_LINE)$(TAB)')" Importance="high"/>
    <Message Text="OutputPath: $(NEW_LINE)$(TAB)$(OutputPath)" Importance="high" />

    <MsBuild
      Projects="@(TestProjects)"
      Targets="$(BuildTargets)"
      Properties="Configuration=$(Configuration);OutputPath=$(OutputPath);SolutionDir=$(SolutionDir)">
      <Output TaskParameter="TargetOutputs" ItemName="TestAssemblies" />
    </MsBuild>

    <ItemGroup>
      <Assemblies Include="@(TestAssemblies)" />
    </ItemGroup>
    <ItemGroup>
      <OutputXmlFile Include="@(TestAssemblies->'%(FullPath)$(TestResultFileAppendix)')"></OutputXmlFile>
    </ItemGroup>
    <PropertyGroup>
      <ToolPath>$(NUnitPath)</ToolPath>
      <WorkingDirectory>%(TestProjects.RootDir)%(TestProjects.Directory)</WorkingDirectory>
      <ContinueOnError>true</ContinueOnError>
    </PropertyGroup>
  </Target>

  <!-- Run NUnit Tests -->
  <Target Name="RunTests" Condition="'@(TestProjects)' != ''" DependsOnTargets="BuildTests">

    <Message Text="run tests..." Importance="high" />
    <Message Text="Test Assemblies:$(NEW_LINE)$(TAB)@(Assemblies->'%(RelativeDir)%(FileName)%(Extension)', '$(NEW_LINE)$(TAB)')" Importance="high"/>

    <NUnit Condition="'$(build_number)' == ''"
            Assemblies="@(Assemblies)"
            ToolPath="$(ToolPath)"
            WorkingDirectory="$(WorkingDirectory)"
            OutputXmlFile="@(OutputXmlFile)"
            ContinueOnError="$(ContinueOnError)">
      <Output TaskParameter="ExitCode" ItemName="TestExitCodes"/>
    </NUnit>

    <NUnit Condition="'$(build_number)' != ''"
            Assemblies="@(Assemblies)"
            ToolPath="$(ToolPath)"
            WorkingDirectory="$(WorkingDirectory)"
            OutputXmlFile="@(OutputXmlFile)"
            NUnitVersion="NUnit-2.6.2"
		        RuntimeVersion="v4.0"
            ContinueOnError="$(ContinueOnError)">
      <Output TaskParameter="ExitCode" ItemName="TestExitCodes"/>
    </NUnit>

    <!-- Fail the build if any test failed-->
    <Error Text="Test error(s) occured" Condition=" '%(TestExitCodes.Identity)' != '0'"/>

  </Target>

</Project>